<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ordermade.store.mapper.RequestMapper">
	<resultMap type="Request" id="requestMap">
		<result property="id" column="id" />
		<result property="title" column="title" />
		<result property="content" column="content" />
		<result property="bound" column="bound" />
		<result property="category" column="type" />
		<result property="hopePrice" column="hope_price" jdbcType="NUMERIC" />
		<result property="price" column="price" jdbcType="NUMERIC" />
		<result property="payment" column="payment" jdbcType="NUMERIC" />
		<result property="page" column="page" />
		<!-- <result property="consumer.id" column="consumer_id"/> -->
		<!-- <result property="maker.id" column="maker_id"/> -->
		<association property="maker" column="maker_id"
			select="ordermade.store.mapper.MemberMapper.selectMemberById"
			javaType="Member" jdbcType="VARCHAR" />
		<association property="consumer" column="consumer_id"
			select="ordermade.store.mapper.MemberMapper.selectMemberById"
			javaType="Member" jdbcType="VARCHAR" />
		<collection property="comments" column="id"
			select="ordermade.store.mapper.CommentMapper.selectCommentsByRequestId"
			javaType="ArrayList" jdbcType="VARCHAR" />
		<collection property="attachs" column="id"
			select="ordermade.store.mapper.AttachMapper.selectAllAttachsByRequestId"
			javaType="ArrayList" jdbcType="VARCHAR" />
	</resultMap>

	<sql id="columns">
		id,
		title,
		maker_id, 
		consumer_id, 
		type, 
		content, 
		hope_price, 
		price, 
		bound,
		payment
	</sql>
	
	<sql id="selectRequest">
		SELECT id, 
		title, 
		maker_id, 
		consumer_id, 
		type, 
		content, 
		hope_price, 
		price,
		bound,
		payment
	</sql>

	<sql id="selectRequestRownum">
		SELECT ROW_NUMBER() OVER (ORDER BY regdate DESC) rnum,
		id, 
		title, 
		maker_id, 
		consumer_id, 
		type, 
		content,
		hope_price, 
		price, 
		bound,
		payment
	</sql>

	<insert id="insertRequest" parameterType="request">
		<selectKey resultType="String" keyProperty="id" order="BEFORE">
			select request_seq.nextval from dual
		</selectKey>
		INSERT INTO request(id, title, <if test="maker.id != null">maker_id, </if>consumer_id, type, content,
		hope_price, price, bound, payment, regdate)
		VALUES (#{id},#{title},<if test="maker.id != null">#{maker.id},</if>#{consumer.id},#{category},#{content},#{hopePrice},#{price},#{bound},#{payment}, SYSDATE)
	</insert>

	<update id="updateRequestById" parameterType="request">
		UPDATE request
		SET
		title = #{title}, maker_id=#{maker.id}, consumer_id=#{consumer.id},
		type = #{category}, content = #{content}, hope_price=#{hopePrice},
		price=#{price}, bound=#{bound}, payment=#{payment}
		WHERE id = #{id}
	</update>
	
	<update id="updateRequestByIdForPayment">
		UPDATE request
		SET payment=#{payment}
		WHERE id = #{requestId}
	</update>

	<delete id="deleteRequestById" parameterType="String">
		DELETE FROM request
		WHERE id = #{id}
	</delete>

	<select id="selectRequestById" parameterType="String" resultMap="requestMap">
		<include refid="selectRequest" />
		FROM request
		WHERE id = #{id}
	</select>

	<select id="selectRequestsByBound" parameterType="HashMap" resultMap="requestMap">
		<include refid="selectRequest"/>
		FROM(SELECT ROW_NUMBER() OVER (ORDER BY regdate DESC) rnum,
                r.id, 
                r.title, 
                r.maker_id, 
                r.consumer_id, 
                r.type, 
                r.content,
                r.hope_price, 
                r.price, 
                r.bound,
                r.payment
				FROM request r LEFT OUTER JOIN invite_request ir ON r.id = ir.request_id
			WHERE r.bound = #{bound} AND ir.id IS NULL)
		WHERE rnum BETWEEN #{begin} AND #{end}
	</select>

	<select id="selectRequestsByBoundAndTitle" parameterType="HashMap"
		resultMap="requestMap">
		<include refid="selectRequest" />
		FROM (<include refid="selectRequestRownum" />
				FROM request
				WHERE bound = #{bound} AND title LIKE '%${title}%')      
		WHERE rnum BETWEEN #{begin} AND #{end}
	</select>

	<select id="selectRequestsByBoundAndContent" parameterType="HashMap"
		resultMap="requestMap">
		<include refid="selectRequest" />
		FROM (<include refid="selectRequestRownum" />
				FROM request
				WHERE bound = #{bound} AND content LIKE '%${content}%')        <!-- '%${value}%' -->
		WHERE rnum BETWEEN #{begin} AND #{end}
	</select>

	<select id="selectRequestsByConsumerId" parameterType="HashMap"
		resultMap="requestMap">
		<include refid="selectRequest" />
		FROM (<include refid="selectRequestRownum" />
				FROM request
				WHERE consumer_id = #{consumerId})       
		WHERE rnum BETWEEN #{begin} AND #{end}
	</select>
	
	<select id="selectRowsByConsumerId" parameterType="String" resultType="int">
		SELECT COUNT(*)
		FROM request
		WHERE consumer_id = #{consumerId}
	</select>

	<select id="selectRequestsByConsumerIdWithMaker" parameterType="HashMap"
		resultMap="requestMap">
		<include refid="selectRequest" />
		FROM (SELECT ROW_NUMBER() OVER (ORDER BY regdate DESC) rnum,
	                r.id, 
	                r.title, 
	                r.maker_id, 
	                r.consumer_id, 
	                r.type, 
	                r.content,
	                r.hope_price, 
	                r.price, 
	                r.bound,
	                r.payment
				FROM request r LEFT OUTER JOIN purchase_history ph ON r.id = ph.request_id
				WHERE r.consumer_id = #{consumerId} AND r.maker_id IS NOT NULL AND (ph.payment != 'Y' OR ph.payment IS NULL))   
		WHERE rnum BETWEEN #{begin} AND #{end}
	</select>

	<select id="selectRequestsByConsumerIdWithPayment"
		parameterType="HashMap" resultMap="requestMap">
		(SELECT ROW_NUMBER() OVER (ORDER BY regdate DESC) rnum, r.id, r.title,
		r.maker_id, r.consumer_id, r.type, r.content, r.hope_price, r.price,
		r.bound, r.payment
		FROM request r INNER JOIN purchase_history ph ON r.id = ph.request_id
		WHERE r.consumer_id = #{consumerId} AND ph.payment = '${@ordermade.constants.Constants@PAYMENT_Y}')
	</select>

	<select id="selectRequestsByMakerId" parameterType="HashMap"
		resultMap="requestMap">
		<include refid="selectRequest" />
		FROM (<include refid="selectRequestRownum" />
				FROM request
				WHERE maker_id = #{makerId})
		WHERE rnum BETWEEN #{begin} AND #{end}
	</select>

	<select id="selectRequestsByMakerIdExceptPayment" parameterType="HashMap"
		resultMap="requestMap">
		SELECT ROW_NUMBER() OVER (ORDER BY regdate DESC) rnum, r.id, r.title, r.maker_id,
		r.consumer_id, r.type, r.content, r.hope_price, r.price, r.bound , r.payment, 1
		page
		FROM request r
		LEFT OUTER JOIN purchase_history ph ON r.id = ph.request_id
		WHERE r.maker_id = #{makerId} AND (ph.payment =
		'${@ordermade.constants.Constants@PAYMENT_N}' OR ph.payment IS NULL)
	</select>
	
	<select id="selectRequestsByMakerIdWithPayment" parameterType="HashMap"
		resultMap="requestMap">
		(SELECT ROW_NUMBER() OVER (ORDER BY regdate DESC) rnum, r.id, r.title, r.maker_id,
		r.consumer_id, r.type, r.content, r.hope_price, r.price, r.bound , r.payment, 1
		page
		FROM request r
		INNER JOIN purchase_history ph ON r.id = ph.request_id
		WHERE r.maker_id = #{makerId} AND ph.payment =
		'${@ordermade.constants.Constants@PAYMENT_Y}')
	</select>



</mapper>