<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="ordermade.store.mapper.PurchaseHistoryMapper">
  
  	<resultMap type="PurchaseHistory" id="purchaseHistoryMap">
  	
  		<id property="id" column="id"/>
  		<result property="invoiceNumber" column="invoice_number"/>
  		<result property="charge" column="charge"/>
  		<result property="deliveryStatus" column="delivery_status"/>
  		<result property="payment" column="payment"/>
  		<result property="orderDate" column="order_date"/>
  		<!-- <result property="consumer.id" column="consumer_id"/> -->
		<!-- <result property="maker.id" column="maker_id"/> -->
  		<association property="maker" column="maker_id" select="ordermade.store.mapper.MemberMapper.selectMemberById" javaType="String" jdbcType="VARCHAR"/>
  		<association property="consumer" column="consumer_id" select="ordermade.store.mapper.MemberMapper.selectMemberById" javaType="String" jdbcType="VARCHAR"/>
  		<association property="request" column="request_id" select="ordermade.store.mapper.RequestMapper.selectRequestById" javaType="String" jdbcType="VARCHAR"/>
		
  	</resultMap>
  	
  	<sql id="selectPurchaseHistory">
	  	SELECT id, 
				consumer_id, 
				maker_id, 
				request_id, 
				order_date, 
				invoice_number, 
				charge, 
				delivery_status, 
				payment
  	</sql>
  	
  	<sql id="selectPurchaseHistoryWithRowNum">
		SELECT ROW_NUMBER() OVER (ORDER BY order_date DESC) rnum, 
				ph.id, 
				ph.consumer_id, 
				ph.maker_id, 
				ph.request_id, 
				ph.order_date, 
				ph.invoice_number, 
				ph.charge, 
				ph.delivery_status, 
				ph.payment
	</sql>
  
  	<insert id="insertPurchaseHistory">
  		<selectKey resultType="String" keyProperty="id" order="BEFORE">
  			select purchase_history_seq.nextval from dual
  		</selectKey>
  		insert into purchase_history(id, consumer_id, maker_id, request_id, order_date, invoice_number, charge, delivery_status, payment) 
  		values(#{id}, #{consumer.id}, #{maker.id}, #{request.id}, SYSDATE, #{invoiceNumber}, #{charge}, #{deliveryStatus}, #{payment})
  	</insert>
  	
  	<update id="updatePurchaseHistoryById" parameterType="PurchaseHistory">
  		update purchase_history
  		set  consumer_id=#{consumer.id}, maker_id=#{maker.id}, request_id=#{request.id}, order_date=#{orderDate}, invoice_number=#{invoiceNumber}, charge=#{charge}, delivery_status=#{deliveryStatus}, payment=#{payment}
  		where id=#{id}
  	</update>
  	
  	<update id="updatePurchaseHistoryByIdForDelivery" parameterType="PurchaseHistory">
  		update purchase_history
  		set  invoice_number=#{invoiceNumber}, charge=#{charge}, delivery_status=#{deliveryStatus}
  		where id=#{id}
  	</update>
  	
  	<update id="updatePurchaseHistoryByRequestIdForPayment" parameterType="PurchaseHistory">
  		update purchase_history
  		set  payment=#{payment}
  		where request_id=#{requestId}
  	</update>
  	
  	<select id="selectPurchseHistoryById" parameterType="String" resultMap="purchaseHistoryMap">
  		select id, consumer_id, maker_id, request_id, order_date, invoice_number, charge, delivery_status, payment
  		from purchase_history
  		where id = #{id}
  	</select>
  
  	<select id="selectPurchaseHistoriesByConsumerId" parameterType="java.util.Map" resultMap="purchaseHistoryMap">
  		<include refid="selectPurchaseHistory" />
  		FROM (<include refid="selectPurchaseHistoryWithRowNum" />
  			FROM purchase_history ph INNER JOIN request r ON ph.request_id = r.id
  			WHERE ph.consumer_id = #{consumerId})
		WHERE rnum BETWEEN  ((#{page}-1)*${@ordermade.constants.Constants@PURCHASEHISTORY_ROW_SIZE}) AND (#{page}*${@ordermade.constants.Constants@PURCHASEHISTORY_ROW_SIZE})
  	</select>
  	
  	<select id="selectPurchaseHistoriesByConsumerIdAndRequestTitle" parameterType="java.util.Map" resultMap="purchaseHistoryMap">
  		<include refid="selectPurchaseHistory" />
  		FROM (<include refid="selectPurchaseHistoryWithRowNum" />
  			FROM purchase_history ph INNER JOIN request r ON ph.request_id = r.id
  			WHERE ph.consumer_id = #{consumerId} AND r.title LIKE '%${title}%')
		WHERE rnum BETWEEN  ((#{page}-1)*${@ordermade.constants.Constants@PURCHASEHISTORY_ROW_SIZE}) AND (#{page}*${@ordermade.constants.Constants@PURCHASEHISTORY_ROW_SIZE})
  	</select>
  	
  	<select id="selectPurchaseHistoriesByMakerId" parameterType="java.util.Map" resultMap="purchaseHistoryMap">
  		<include refid="selectPurchaseHistory" />
  		FROM (<include refid="selectPurchaseHistoryWithRowNum" />
  			FROM purchase_history ph INNER JOIN request r ON ph.request_id = r.id
  			WHERE ph.maker_id = #{makerId})
		WHERE rnum BETWEEN  ((#{page}-1)*${@ordermade.constants.Constants@PURCHASEHISTORY_ROW_SIZE}) AND (#{page}*${@ordermade.constants.Constants@PURCHASEHISTORY_ROW_SIZE})
  	</select>
  	
  	<select id="selectPurchaseHistoriesByMakerIdAndRequestTitle" parameterType="java.util.Map" resultMap="purchaseHistoryMap">
  		<include refid="selectPurchaseHistory" />
  		FROM (<include refid="selectPurchaseHistoryWithRowNum" />
  			FROM purchase_history ph INNER JOIN request r ON ph.request_id = r.id
  			WHERE ph.maker_id = #{makerId} AND r.title LIKE '%${title}%')
		WHERE rnum BETWEEN  ((#{page}-1)*${@ordermade.constants.Constants@PURCHASEHISTORY_ROW_SIZE}) AND (#{page}*${@ordermade.constants.Constants@PURCHASEHISTORY_ROW_SIZE})
  	</select>
  
  </mapper>
  