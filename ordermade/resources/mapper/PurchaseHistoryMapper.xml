<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="ordermade.store.mapper.PurchaseHistoryMapper">
  
  	<resultMap type="PurchaseHistory" id="purchaseHistoryMap">
  	
  		<id property="id" column="id"/>
  		<result property="invoiceNumber" column="invoice_number"/>
  		<result property="charge" column="charge"/>
  		<result property="deliveryStatus" column="delivery_status"/>
  		<result property="payment" column="payment"/>
  		<result property="orderDate" column="order_date"/>
  		<!-- <result property="consumer.id" column="consumer_id"/> -->
		<!-- <result property="maker.id" column="maker_id"/> -->
  		<association property="maker" column="maker_id" select="ordermade.store.mapper.MemberMapper.selectMemberById" javaType="String" jdbcType="VARCHAR"/>
  		<association property="consumer" column="consumer_id" select="ordermade.store.mapper.MemberMapper.selectMemberById" javaType="String" jdbcType="VARCHAR"/>
  		<association property="request" column="request_id" select="ordermade.store.mapper.RequestMapper.selectRequestById" javaType="String" jdbcType="VARCHAR"/>
		
  	</resultMap>
  
  
  	<insert id="insertPurchaseHistory">
  		<selectKey resultType="String" keyProperty="id" order="BEFORE">
  			select purchase_history_seq.nextval from dual
  		</selectKey>
  		insert into purchase_history(id, consumer_id, maker_id, request_id, order_date, invoice_number, charge, delivery_status, payment) 
  		values(#{id}, #{consumer.id}, #{maker.id}, #{request.id}, TO_DATE(sysdate,'yyyy/mm/dd hh24:mi:ss'), #{invoiceNumber}, #{charge}, #{deliveryStatus}, #{payment})
  	</insert>
  	
  	<update id="updatePurchaseHistoryById" parameterType="PurchaseHistory">
  		update purchase_history set  consumer_id=#{consumer.id}, maker_id=#{maker.id}, request_id=#{request.id}, order_date=#{orderDate}, invoice_number=#{invoiceNumber}, charge=#{charge}, delivery_status=#{deliveryStatus}, payment=#{payment} where id=#{id}
  	</update>
  	
  	<select id="selectPurchseHistoryById" parameterType="String" resultMap="purchaseHistoryMap">
  		select id, consumer_id, maker_id, request_id, order_date, invoice_number, charge, delivery_status, payment
  		from purchase_history
  		where id = #{id}
  	</select>
  
  	<select id="selectPurchaseHistoriesByConsumerId" parameterType="java.util.Map" resultMap="purchaseHistoryMap">
  		select * from (
			select rownum limitNum, A.* from purchase_history A where consumer_id=#{consumerId}
			and rownum &lt;= (#{page}*10) order by A.id desc
		) where limitNum > ((#{page}-1)*10)
  
  	</select>
  	
  	<select id="selectPurchaseHistoriesByConsumerIdAndRequestTitle" parameterType="java.util.Map" resultMap="purchaseHistoryMap">
  		select * from (
  			select rownum limitNum, A.* from purchase_history A, request B  where A.consumer_id=#{consumerId} and B.title like '%${title}%' and A.request_id = B.id
			and rownum &lt;= (#{page}*10) order by A.id desc
		) where limitNum > ((#{page}-1)*10)
  	</select>
  	
  	<select id="selectPurchaseHistoriesByMakerId" parameterType="java.util.Map" resultMap="purchaseHistoryMap">
  		select * from (
			select rownum limitNum, A.* from purchase_history A where maker_id=#{makerId}
			and rownum &lt;= (#{page}*10) order by A.id desc
		) where limitNum > ((#{page}-1)*10)
  	</select>
  	
  	<select id="selectPurchaseHistoriesByMakerIdAndRequestTitle" parameterType="java.util.Map" resultMap="purchaseHistoryMap">
  		select * from (
			select rownum limitNum, A.* from purchase_history A, request B  where A.maker_id=#{makerId} and B.title like '%${title}%' and A.request_id = B.id 
			and rownum &lt;= (#{page}*10) order by A.id desc
		) where limitNum > ((#{page}-1)*10)
  	</select>
  	
  
  </mapper>
  